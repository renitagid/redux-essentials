import { configureStore } from '@reduxjs/toolkit'

import postsReducer from '../features/posts/postsSlice'
import notificationsReducer from '../features/notifications/notificationsSlice'
import { apiSlice } from '../features/api/apiSlice'

// All reducers need to be added in here - store is passed to Provider so all components have access to all reducers. Reducers originate from slices. Separate slices by feature.
// This is where the current state and the actions being dispatched come together to generate the new current state of the app
export default configureStore({
  reducer: {
    posts: postsReducer,
    notifications: notificationsReducer,
    // apiSlice.reducerPath is a key to ensure the caching reducer is added in the right place
    [apiSlice.reducerPath]: apiSlice.reducer
  },
  // middleware is generated by the API slice that we need to add here in the store
    //middleware manages cache lifetimes and expirations
  middleware: getDefaultMiddleware =>
    getDefaultMiddleware().concat(apiSlice.middleware)

})
